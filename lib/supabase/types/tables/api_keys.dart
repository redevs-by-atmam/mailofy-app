//
//  Generated file. Do not edit.
//  Generated by supabase_codegen (1.4.0)
//
// ignore_for_file: require_trailing_commas, constant_identifier_names

import 'package:supabase_codegen/supabase_codegen.dart';
// Import enums if needed
// ignore: unused_import, always_use_package_imports
import '../database.dart';

/// Api Keys Table
class ApiKeysTable extends SupabaseTable<ApiKeysRow> {
  /// Table Name
  @override
  String get tableName => 'api_keys';

  /// Create a [ApiKeysRow] from the [data] provided
  @override
  ApiKeysRow createRow(Map<String, dynamic> data) => ApiKeysRow.fromJson(data);
}

/// Api Keys Row
class ApiKeysRow extends SupabaseDataRow {
  /// Api Keys Row
  ApiKeysRow({
    required String userId,
    required String name,
    required String keyHash,
    required String prefix,
    String? id,
    DateTime? createdAt,
    DateTime? expiresAt,
    DateTime? lastUsedAt,
    bool? revoked,
    List<String>? scopes,
    Map<String, dynamic>? metadata,
  }) : super({
         'user_id': supaSerialize(userId),
         'name': supaSerialize(name),
         'key_hash': supaSerialize(keyHash),
         'prefix': supaSerialize(prefix),
         if (id != null) 'id': supaSerialize(id),
         if (createdAt != null) 'created_at': supaSerialize(createdAt),
         if (expiresAt != null) 'expires_at': supaSerialize(expiresAt),
         if (lastUsedAt != null) 'last_used_at': supaSerialize(lastUsedAt),
         if (revoked != null) 'revoked': supaSerialize(revoked),
         if (scopes != null) 'scopes': supaSerialize(scopes),
         if (metadata != null) 'metadata': supaSerialize(metadata),
       });

  /// Api Keys Row
  const ApiKeysRow._(super.data);

  /// Create Api Keys Row from a [data] map
  factory ApiKeysRow.fromJson(Map<String, dynamic> data) =>
      ApiKeysRow._(data.cleaned);

  /// Get the Json representation of the row
  Map<String, dynamic> toJson() => data;

  /// Get the [SupabaseTable] for this row
  @override
  SupabaseTable get table => ApiKeysTable();

  /// Id field name
  static const String idField = 'id';

  /// Id
  String get id => getField<String>(idField, defaultValue: 'extensions.')!;
  set id(String value) => setField<String>(idField, value);

  /// User Id field name
  static const String userIdField = 'user_id';

  /// User Id
  String get userId => getField<String>(userIdField)!;
  set userId(String value) => setField<String>(userIdField, value);

  /// Name field name
  static const String nameField = 'name';

  /// Name
  String get name => getField<String>(nameField)!;
  set name(String value) => setField<String>(nameField, value);

  /// Key Hash field name
  static const String keyHashField = 'key_hash';

  /// Key Hash
  String get keyHash => getField<String>(keyHashField)!;
  set keyHash(String value) => setField<String>(keyHashField, value);

  /// Prefix field name
  static const String prefixField = 'prefix';

  /// Prefix
  String get prefix => getField<String>(prefixField)!;
  set prefix(String value) => setField<String>(prefixField, value);

  /// Created At field name
  static const String createdAtField = 'created_at';

  /// Created At
  DateTime get createdAt =>
      getField<DateTime>(createdAtField, defaultValue: DateTime.now())!;
  set createdAt(DateTime value) => setField<DateTime>(createdAtField, value);

  /// Expires At field name
  static const String expiresAtField = 'expires_at';

  /// Expires At
  DateTime? get expiresAt => getField<DateTime>(expiresAtField);
  set expiresAt(DateTime? value) => setField<DateTime>(expiresAtField, value);

  /// Last Used At field name
  static const String lastUsedAtField = 'last_used_at';

  /// Last Used At
  DateTime? get lastUsedAt => getField<DateTime>(lastUsedAtField);
  set lastUsedAt(DateTime? value) => setField<DateTime>(lastUsedAtField, value);

  /// Revoked field name
  static const String revokedField = 'revoked';

  /// Revoked
  bool get revoked => getField<bool>(revokedField, defaultValue: false)!;
  set revoked(bool value) => setField<bool>(revokedField, value);

  /// Scopes field name
  static const String scopesField = 'scopes';

  /// Scopes
  List<String> get scopes => getListField<String>(scopesField);
  set scopes(List<String>? value) => setListField<String>(scopesField, value);

  /// Metadata field name
  static const String metadataField = 'metadata';

  /// Metadata
  Map<String, dynamic>? get metadata =>
      getField<Map<String, dynamic>>(metadataField);
  set metadata(Map<String, dynamic>? value) =>
      setField<Map<String, dynamic>>(metadataField, value);

  /// Make a copy of the current [ApiKeysRow]
  /// overriding the provided fields
  ApiKeysRow copyWith({
    String? userId,
    String? name,
    String? keyHash,
    String? prefix,
    String? id,
    DateTime? createdAt,
    DateTime? expiresAt,
    DateTime? lastUsedAt,
    bool? revoked,
    List<String>? scopes,
    Map<String, dynamic>? metadata,
  }) => ApiKeysRow.fromJson({
    'user_id': supaSerialize(userId) ?? data['user_id'],
    'name': supaSerialize(name) ?? data['name'],
    'key_hash': supaSerialize(keyHash) ?? data['key_hash'],
    'prefix': supaSerialize(prefix) ?? data['prefix'],
    'id': supaSerialize(id) ?? data['id'],
    'created_at': supaSerialize(createdAt) ?? data['created_at'],
    'expires_at': supaSerialize(expiresAt) ?? data['expires_at'],
    'last_used_at': supaSerialize(lastUsedAt) ?? data['last_used_at'],
    'revoked': supaSerialize(revoked) ?? data['revoked'],
    'scopes': supaSerialize(scopes) ?? data['scopes'],
    'metadata': supaSerialize(metadata) ?? data['metadata'],
  });
}

/// Date: 2025-08-08 19:06:35.283617
