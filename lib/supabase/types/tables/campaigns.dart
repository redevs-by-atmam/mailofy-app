//
//  Generated file. Do not edit.
//  Generated by supabase_codegen (1.4.0)
//
// ignore_for_file: require_trailing_commas, constant_identifier_names

import 'package:supabase_codegen/supabase_codegen.dart';
// Import enums if needed
// ignore: unused_import, always_use_package_imports
import '../database.dart';

/// Campaigns Table
class CampaignsTable extends SupabaseTable<CampaignsRow> {
  /// Table Name
  @override
  String get tableName => 'campaigns';

  /// Create a [CampaignsRow] from the [data] provided
  @override
  CampaignsRow createRow(Map<String, dynamic> data) =>
      CampaignsRow.fromJson(data);
}

/// Campaigns Row
class CampaignsRow extends SupabaseDataRow {
  /// Campaigns Row
  CampaignsRow({
    String? id,
    String? title,
    String? description,
    DateTime? createdAt,
    DateTime? updatedAt,
    String? uid,
    String? templateId,
    String? recipientFolderId,
    DateTime? scheduledAt,
    CampaignStatus? status,
    DateTime? lastRunAt,
    List<String>? accountIds,
    String? automatedCron,
    int? cronJobId,
  }) : super({
         if (id != null) 'id': supaSerialize(id),
         if (title != null) 'title': supaSerialize(title),
         if (description != null) 'description': supaSerialize(description),
         if (createdAt != null) 'created_at': supaSerialize(createdAt),
         if (updatedAt != null) 'updated_at': supaSerialize(updatedAt),
         if (uid != null) 'uid': supaSerialize(uid),
         if (templateId != null) 'template_id': supaSerialize(templateId),
         if (recipientFolderId != null)
           'recipient_folder_id': supaSerialize(recipientFolderId),
         if (scheduledAt != null) 'scheduled_at': supaSerialize(scheduledAt),
         if (status != null) 'status': supaSerialize(status),
         if (lastRunAt != null) 'last_run_at': supaSerialize(lastRunAt),
         if (accountIds != null) 'account_ids': supaSerialize(accountIds),
         if (automatedCron != null)
           'automated_cron': supaSerialize(automatedCron),
         if (cronJobId != null) 'cron_job_id': supaSerialize(cronJobId),
       });

  /// Campaigns Row
  const CampaignsRow._(super.data);

  /// Create Campaigns Row from a [data] map
  factory CampaignsRow.fromJson(Map<String, dynamic> data) =>
      CampaignsRow._(data.cleaned);

  /// Get the Json representation of the row
  Map<String, dynamic> toJson() => data;

  /// Get the [SupabaseTable] for this row
  @override
  SupabaseTable get table => CampaignsTable();

  /// Id field name
  static const String idField = 'id';

  /// Id
  String get id => getField<String>(idField, defaultValue: '')!;
  set id(String value) => setField<String>(idField, value);

  /// Title field name
  static const String titleField = 'title';

  /// Title
  String? get title => getField<String>(titleField);
  set title(String? value) => setField<String>(titleField, value);

  /// Description field name
  static const String descriptionField = 'description';

  /// Description
  String? get description => getField<String>(descriptionField);
  set description(String? value) => setField<String>(descriptionField, value);

  /// Created At field name
  static const String createdAtField = 'created_at';

  /// Created At
  DateTime get createdAt =>
      getField<DateTime>(createdAtField, defaultValue: DateTime.now())!;
  set createdAt(DateTime value) => setField<DateTime>(createdAtField, value);

  /// Updated At field name
  static const String updatedAtField = 'updated_at';

  /// Updated At
  DateTime get updatedAt =>
      getField<DateTime>(updatedAtField, defaultValue: DateTime.now())!;
  set updatedAt(DateTime value) => setField<DateTime>(updatedAtField, value);

  /// Uid field name
  static const String uidField = 'uid';

  /// Uid
  String get uid => getField<String>(uidField, defaultValue: 'auth.')!;
  set uid(String value) => setField<String>(uidField, value);

  /// Template Id field name
  static const String templateIdField = 'template_id';

  /// Template Id
  String? get templateId => getField<String>(templateIdField);
  set templateId(String? value) => setField<String>(templateIdField, value);

  /// Recipient Folder Id field name
  static const String recipientFolderIdField = 'recipient_folder_id';

  /// Recipient Folder Id
  String? get recipientFolderId => getField<String>(recipientFolderIdField);
  set recipientFolderId(String? value) =>
      setField<String>(recipientFolderIdField, value);

  /// Scheduled At field name
  static const String scheduledAtField = 'scheduled_at';

  /// Scheduled At
  DateTime? get scheduledAt => getField<DateTime>(scheduledAtField);
  set scheduledAt(DateTime? value) =>
      setField<DateTime>(scheduledAtField, value);

  /// Status field name
  static const String statusField = 'status';

  /// Status
  CampaignStatus get status =>
      getField<CampaignStatus>(
        statusField,
        enumValues: CampaignStatus.values,
        defaultValue: CampaignStatus.idle,
      )!;
  set status(CampaignStatus value) =>
      setField<CampaignStatus>(statusField, value);

  /// Last Run At field name
  static const String lastRunAtField = 'last_run_at';

  /// Last Run At
  DateTime? get lastRunAt => getField<DateTime>(lastRunAtField);
  set lastRunAt(DateTime? value) => setField<DateTime>(lastRunAtField, value);

  /// Account Ids field name
  static const String accountIdsField = 'account_ids';

  /// Account Ids
  List<String> get accountIds => getListField<String>(accountIdsField);
  set accountIds(List<String>? value) =>
      setListField<String>(accountIdsField, value);

  /// Automated Cron field name
  static const String automatedCronField = 'automated_cron';

  /// Automated Cron
  String? get automatedCron => getField<String>(automatedCronField);
  set automatedCron(String? value) =>
      setField<String>(automatedCronField, value);

  /// Cron Job Id field name
  static const String cronJobIdField = 'cron_job_id';

  /// Cron Job Id
  int? get cronJobId => getField<int>(cronJobIdField);
  set cronJobId(int? value) => setField<int>(cronJobIdField, value);

  /// Make a copy of the current [CampaignsRow]
  /// overriding the provided fields
  CampaignsRow copyWith({
    String? id,
    String? title,
    String? description,
    DateTime? createdAt,
    DateTime? updatedAt,
    String? uid,
    String? templateId,
    String? recipientFolderId,
    DateTime? scheduledAt,
    CampaignStatus? status,
    DateTime? lastRunAt,
    List<String>? accountIds,
    String? automatedCron,
    int? cronJobId,
  }) => CampaignsRow.fromJson({
    'id': supaSerialize(id) ?? data['id'],
    'title': supaSerialize(title) ?? data['title'],
    'description': supaSerialize(description) ?? data['description'],
    'created_at': supaSerialize(createdAt) ?? data['created_at'],
    'updated_at': supaSerialize(updatedAt) ?? data['updated_at'],
    'uid': supaSerialize(uid) ?? data['uid'],
    'template_id': supaSerialize(templateId) ?? data['template_id'],
    'recipient_folder_id':
        supaSerialize(recipientFolderId) ?? data['recipient_folder_id'],
    'scheduled_at': supaSerialize(scheduledAt) ?? data['scheduled_at'],
    'status': supaSerialize(status) ?? data['status'],
    'last_run_at': supaSerialize(lastRunAt) ?? data['last_run_at'],
    'account_ids': supaSerialize(accountIds) ?? data['account_ids'],
    'automated_cron': supaSerialize(automatedCron) ?? data['automated_cron'],
    'cron_job_id': supaSerialize(cronJobId) ?? data['cron_job_id'],
  });
}

/// Date: 2025-08-08 19:06:35.296766
