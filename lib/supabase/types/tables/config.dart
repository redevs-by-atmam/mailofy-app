//
//  Generated file. Do not edit.
//  Generated by supabase_codegen (1.4.0)
//
// ignore_for_file: require_trailing_commas, constant_identifier_names

import 'package:supabase_codegen/supabase_codegen.dart';
// Import enums if needed
// ignore: unused_import, always_use_package_imports
import '../database.dart';

/// Config Table
class ConfigTable extends SupabaseTable<ConfigRow> {
  /// Table Name
  @override
  String get tableName => 'config';

  /// Create a [ConfigRow] from the [data] provided
  @override
  ConfigRow createRow(Map<String, dynamic> data) => ConfigRow.fromJson(data);
}

/// Config Row
class ConfigRow extends SupabaseDataRow {
  /// Config Row
  ConfigRow({required String key, String? value})
    : super({
        'key': supaSerialize(key),
        if (value != null) 'value': supaSerialize(value),
      });

  /// Config Row
  const ConfigRow._(super.data);

  /// Create Config Row from a [data] map
  factory ConfigRow.fromJson(Map<String, dynamic> data) =>
      ConfigRow._(data.cleaned);

  /// Get the Json representation of the row
  Map<String, dynamic> toJson() => data;

  /// Get the [SupabaseTable] for this row
  @override
  SupabaseTable get table => ConfigTable();

  /// Key field name
  static const String keyField = 'key';

  /// Key
  String get key => getField<String>(keyField)!;
  set key(String value) => setField<String>(keyField, value);

  /// Value field name
  static const String valueField = 'value';

  /// Value
  String? get value => getField<String>(valueField);
  set value(String? value) => setField<String>(valueField, value);

  /// Make a copy of the current [ConfigRow]
  /// overriding the provided fields
  ConfigRow copyWith({String? key, String? value}) => ConfigRow.fromJson({
    'key': supaSerialize(key) ?? data['key'],
    'value': supaSerialize(value) ?? data['value'],
  });
}

/// Date: 2025-08-08 19:06:35.301859
