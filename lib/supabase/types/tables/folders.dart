//
//  Generated file. Do not edit.
//  Generated by supabase_codegen (1.4.0)
//
// ignore_for_file: require_trailing_commas, constant_identifier_names

import 'package:supabase_codegen/supabase_codegen.dart';
// Import enums if needed
// ignore: unused_import, always_use_package_imports
import '../database.dart';

/// Folders Table
class FoldersTable extends SupabaseTable<FoldersRow> {
  /// Table Name
  @override
  String get tableName => 'folders';

  /// Create a [FoldersRow] from the [data] provided
  @override
  FoldersRow createRow(Map<String, dynamic> data) => FoldersRow.fromJson(data);
}

/// Folders Row
class FoldersRow extends SupabaseDataRow {
  /// Folders Row
  FoldersRow({
    String? id,
    DateTime? createdAt,
    String? name,
    String? uid,
    int? recipientCount,
  }) : super({
         if (id != null) 'id': supaSerialize(id),
         if (createdAt != null) 'created_at': supaSerialize(createdAt),
         if (name != null) 'name': supaSerialize(name),
         if (uid != null) 'uid': supaSerialize(uid),
         if (recipientCount != null)
           'recipient_count': supaSerialize(recipientCount),
       });

  /// Folders Row
  const FoldersRow._(super.data);

  /// Create Folders Row from a [data] map
  factory FoldersRow.fromJson(Map<String, dynamic> data) =>
      FoldersRow._(data.cleaned);

  /// Get the Json representation of the row
  Map<String, dynamic> toJson() => data;

  /// Get the [SupabaseTable] for this row
  @override
  SupabaseTable get table => FoldersTable();

  /// Id field name
  static const String idField = 'id';

  /// Id
  String get id => getField<String>(idField, defaultValue: '')!;
  set id(String value) => setField<String>(idField, value);

  /// Created At field name
  static const String createdAtField = 'created_at';

  /// Created At
  DateTime get createdAt =>
      getField<DateTime>(createdAtField, defaultValue: DateTime.now())!;
  set createdAt(DateTime value) => setField<DateTime>(createdAtField, value);

  /// Name field name
  static const String nameField = 'name';

  /// Name
  String? get name => getField<String>(nameField);
  set name(String? value) => setField<String>(nameField, value);

  /// Uid field name
  static const String uidField = 'uid';

  /// Uid
  String get uid => getField<String>(uidField, defaultValue: 'auth.')!;
  set uid(String value) => setField<String>(uidField, value);

  /// Recipient Count field name
  static const String recipientCountField = 'recipient_count';

  /// Recipient Count
  int get recipientCount =>
      getField<int>(recipientCountField, defaultValue: 0)!;
  set recipientCount(int value) => setField<int>(recipientCountField, value);

  /// Make a copy of the current [FoldersRow]
  /// overriding the provided fields
  FoldersRow copyWith({
    String? id,
    DateTime? createdAt,
    String? name,
    String? uid,
    int? recipientCount,
  }) => FoldersRow.fromJson({
    'id': supaSerialize(id) ?? data['id'],
    'created_at': supaSerialize(createdAt) ?? data['created_at'],
    'name': supaSerialize(name) ?? data['name'],
    'uid': supaSerialize(uid) ?? data['uid'],
    'recipient_count': supaSerialize(recipientCount) ?? data['recipient_count'],
  });
}

/// Date: 2025-08-08 19:06:35.308389
