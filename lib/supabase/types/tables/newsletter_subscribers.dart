//
//  Generated file. Do not edit.
//  Generated by supabase_codegen (1.4.0)
//
// ignore_for_file: require_trailing_commas, constant_identifier_names

import 'package:supabase_codegen/supabase_codegen.dart';
// Import enums if needed
// ignore: unused_import, always_use_package_imports
import '../database.dart';

/// Newsletter Subscribers Table
class NewsletterSubscribersTable
    extends SupabaseTable<NewsletterSubscribersRow> {
  /// Table Name
  @override
  String get tableName => 'newsletter_subscribers';

  /// Create a [NewsletterSubscribersRow] from the [data] provided
  @override
  NewsletterSubscribersRow createRow(Map<String, dynamic> data) =>
      NewsletterSubscribersRow.fromJson(data);
}

/// Newsletter Subscribers Row
class NewsletterSubscribersRow extends SupabaseDataRow {
  /// Newsletter Subscribers Row
  NewsletterSubscribersRow({
    required int id,
    DateTime? createdAt,
    String? email,
  }) : super({
         'id': supaSerialize(id),
         if (createdAt != null) 'created_at': supaSerialize(createdAt),
         if (email != null) 'email': supaSerialize(email),
       });

  /// Newsletter Subscribers Row
  const NewsletterSubscribersRow._(super.data);

  /// Create Newsletter Subscribers Row from a [data] map
  factory NewsletterSubscribersRow.fromJson(Map<String, dynamic> data) =>
      NewsletterSubscribersRow._(data.cleaned);

  /// Get the Json representation of the row
  Map<String, dynamic> toJson() => data;

  /// Get the [SupabaseTable] for this row
  @override
  SupabaseTable get table => NewsletterSubscribersTable();

  /// Id field name
  static const String idField = 'id';

  /// Id
  int get id => getField<int>(idField)!;
  set id(int value) => setField<int>(idField, value);

  /// Created At field name
  static const String createdAtField = 'created_at';

  /// Created At
  DateTime get createdAt =>
      getField<DateTime>(createdAtField, defaultValue: DateTime.now())!;
  set createdAt(DateTime value) => setField<DateTime>(createdAtField, value);

  /// Email field name
  static const String emailField = 'email';

  /// Email
  String? get email => getField<String>(emailField);
  set email(String? value) => setField<String>(emailField, value);

  /// Make a copy of the current [NewsletterSubscribersRow]
  /// overriding the provided fields
  NewsletterSubscribersRow copyWith({
    int? id,
    DateTime? createdAt,
    String? email,
  }) => NewsletterSubscribersRow.fromJson({
    'id': supaSerialize(id) ?? data['id'],
    'created_at': supaSerialize(createdAt) ?? data['created_at'],
    'email': supaSerialize(email) ?? data['email'],
  });
}

/// Date: 2025-08-08 19:06:35.314927
