//
//  Generated file. Do not edit.
//  Generated by supabase_codegen (1.4.0)
//
// ignore_for_file: require_trailing_commas, constant_identifier_names

import 'package:supabase_codegen/supabase_codegen.dart';
// Import enums if needed
// ignore: unused_import, always_use_package_imports
import '../database.dart';

/// Plans Table
class PlansTable extends SupabaseTable<PlansRow> {
  /// Table Name
  @override
  String get tableName => 'plans';

  /// Create a [PlansRow] from the [data] provided
  @override
  PlansRow createRow(Map<String, dynamic> data) => PlansRow.fromJson(data);
}

/// Plans Row
class PlansRow extends SupabaseDataRow {
  /// Plans Row
  PlansRow({
    required String id,
    required String name,
    double? pricePerMonth,
    DateTime? createdAt,
    int? maxCampaigns,
    int? maxMailAccounts,
    int? maxTemplates,
    int? maxFolders,
    int? maxContacts,
    bool? hasAutomation,
    bool? hasScheduler,
    bool? hasPrivateTemplates,
    bool? hasEmailTrack,
    int? maxCampaignRuns,
  }) : super({
         'id': supaSerialize(id),
         'name': supaSerialize(name),
         if (pricePerMonth != null)
           'price_per_month': supaSerialize(pricePerMonth),
         if (createdAt != null) 'created_at': supaSerialize(createdAt),
         if (maxCampaigns != null) 'max_campaigns': supaSerialize(maxCampaigns),
         if (maxMailAccounts != null)
           'max_mail_accounts': supaSerialize(maxMailAccounts),
         if (maxTemplates != null) 'max_templates': supaSerialize(maxTemplates),
         if (maxFolders != null) 'max_folders': supaSerialize(maxFolders),
         if (maxContacts != null) 'max_contacts': supaSerialize(maxContacts),
         if (hasAutomation != null)
           'has_automation': supaSerialize(hasAutomation),
         if (hasScheduler != null) 'has_scheduler': supaSerialize(hasScheduler),
         if (hasPrivateTemplates != null)
           'has_private_templates': supaSerialize(hasPrivateTemplates),
         if (hasEmailTrack != null)
           'has_email_track': supaSerialize(hasEmailTrack),
         if (maxCampaignRuns != null)
           'max_campaign_runs': supaSerialize(maxCampaignRuns),
       });

  /// Plans Row
  const PlansRow._(super.data);

  /// Create Plans Row from a [data] map
  factory PlansRow.fromJson(Map<String, dynamic> data) =>
      PlansRow._(data.cleaned);

  /// Get the Json representation of the row
  Map<String, dynamic> toJson() => data;

  /// Get the [SupabaseTable] for this row
  @override
  SupabaseTable get table => PlansTable();

  /// Id field name
  static const String idField = 'id';

  /// Id
  String get id => getField<String>(idField)!;
  set id(String value) => setField<String>(idField, value);

  /// Name field name
  static const String nameField = 'name';

  /// Name
  String get name => getField<String>(nameField)!;
  set name(String value) => setField<String>(nameField, value);

  /// Price Per Month field name
  static const String pricePerMonthField = 'price_per_month';

  /// Price Per Month
  double? get pricePerMonth => getField<double>(pricePerMonthField);
  set pricePerMonth(double? value) =>
      setField<double>(pricePerMonthField, value);

  /// Created At field name
  static const String createdAtField = 'created_at';

  /// Created At
  DateTime get createdAt =>
      getField<DateTime>(createdAtField, defaultValue: DateTime.now())!;
  set createdAt(DateTime value) => setField<DateTime>(createdAtField, value);

  /// Max Campaigns field name
  static const String maxCampaignsField = 'max_campaigns';

  /// Max Campaigns
  int? get maxCampaigns => getField<int>(maxCampaignsField);
  set maxCampaigns(int? value) => setField<int>(maxCampaignsField, value);

  /// Max Mail Accounts field name
  static const String maxMailAccountsField = 'max_mail_accounts';

  /// Max Mail Accounts
  int? get maxMailAccounts => getField<int>(maxMailAccountsField);
  set maxMailAccounts(int? value) => setField<int>(maxMailAccountsField, value);

  /// Max Templates field name
  static const String maxTemplatesField = 'max_templates';

  /// Max Templates
  int? get maxTemplates => getField<int>(maxTemplatesField);
  set maxTemplates(int? value) => setField<int>(maxTemplatesField, value);

  /// Max Folders field name
  static const String maxFoldersField = 'max_folders';

  /// Max Folders
  int? get maxFolders => getField<int>(maxFoldersField);
  set maxFolders(int? value) => setField<int>(maxFoldersField, value);

  /// Max Contacts field name
  static const String maxContactsField = 'max_contacts';

  /// Max Contacts
  int? get maxContacts => getField<int>(maxContactsField);
  set maxContacts(int? value) => setField<int>(maxContactsField, value);

  /// Has Automation field name
  static const String hasAutomationField = 'has_automation';

  /// Has Automation
  bool? get hasAutomation => getField<bool>(hasAutomationField);
  set hasAutomation(bool? value) => setField<bool>(hasAutomationField, value);

  /// Has Scheduler field name
  static const String hasSchedulerField = 'has_scheduler';

  /// Has Scheduler
  bool? get hasScheduler => getField<bool>(hasSchedulerField);
  set hasScheduler(bool? value) => setField<bool>(hasSchedulerField, value);

  /// Has Private Templates field name
  static const String hasPrivateTemplatesField = 'has_private_templates';

  /// Has Private Templates
  bool? get hasPrivateTemplates => getField<bool>(hasPrivateTemplatesField);
  set hasPrivateTemplates(bool? value) =>
      setField<bool>(hasPrivateTemplatesField, value);

  /// Has Email Track field name
  static const String hasEmailTrackField = 'has_email_track';

  /// Has Email Track
  bool? get hasEmailTrack => getField<bool>(hasEmailTrackField);
  set hasEmailTrack(bool? value) => setField<bool>(hasEmailTrackField, value);

  /// Max Campaign Runs field name
  static const String maxCampaignRunsField = 'max_campaign_runs';

  /// Max Campaign Runs
  int? get maxCampaignRuns => getField<int>(maxCampaignRunsField);
  set maxCampaignRuns(int? value) => setField<int>(maxCampaignRunsField, value);

  /// Make a copy of the current [PlansRow]
  /// overriding the provided fields
  PlansRow copyWith({
    String? id,
    String? name,
    double? pricePerMonth,
    DateTime? createdAt,
    int? maxCampaigns,
    int? maxMailAccounts,
    int? maxTemplates,
    int? maxFolders,
    int? maxContacts,
    bool? hasAutomation,
    bool? hasScheduler,
    bool? hasPrivateTemplates,
    bool? hasEmailTrack,
    int? maxCampaignRuns,
  }) => PlansRow.fromJson({
    'id': supaSerialize(id) ?? data['id'],
    'name': supaSerialize(name) ?? data['name'],
    'price_per_month': supaSerialize(pricePerMonth) ?? data['price_per_month'],
    'created_at': supaSerialize(createdAt) ?? data['created_at'],
    'max_campaigns': supaSerialize(maxCampaigns) ?? data['max_campaigns'],
    'max_mail_accounts':
        supaSerialize(maxMailAccounts) ?? data['max_mail_accounts'],
    'max_templates': supaSerialize(maxTemplates) ?? data['max_templates'],
    'max_folders': supaSerialize(maxFolders) ?? data['max_folders'],
    'max_contacts': supaSerialize(maxContacts) ?? data['max_contacts'],
    'has_automation': supaSerialize(hasAutomation) ?? data['has_automation'],
    'has_scheduler': supaSerialize(hasScheduler) ?? data['has_scheduler'],
    'has_private_templates':
        supaSerialize(hasPrivateTemplates) ?? data['has_private_templates'],
    'has_email_track': supaSerialize(hasEmailTrack) ?? data['has_email_track'],
    'max_campaign_runs':
        supaSerialize(maxCampaignRuns) ?? data['max_campaign_runs'],
  });
}

/// Date: 2025-08-08 19:06:35.320469
